name: Gradle Package

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'corretto'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
        role-session-name: github-actions-session

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Create Gradle configuration
      run: |
        aws secretsmanager get-secret-value --region ${{ vars.AWS_REGION }} --secret-id gpg-passphrase --query SecretString --output text | jq -r .passphrase > passphrase.txt
        echo "Passphrase"
        cat passphrase.txt
        
        # Kill any existing gpg-agent
        gpgconf --kill gpg-agent || true
       
        # Create GPG directory
        rm -rf $HOME/.gnupg
        mkdir -p $HOME/.gnupg
        chmod 700 $HOME/.gnupg
        

        # Import private key
        aws secretsmanager get-secret-value --region us-east-1 --secret-id ${{ secrets.GPG_KEY_ID }} --query SecretString --output text | jq -r .privateKey | gpg --batch --import --passphrase-file passphrase.txt

        # Get the imported key ID
        KEY_ID=$(gpg --list-secret-keys --keyid-format SHORT | grep sec | tail -n 1 | awk '{print $2}' | cut -d'/' -f2)
        echo "Found Key ID: $KEY_ID"

        echo "Setting passphrase"
        gpg --batch --yes --passphrase-file passphrase.txt --homedir $HOME/.gnupg

        echo "Exporting passphrase"
        # Export the specific key with passphrase
        gpg --batch --yes --pinentry-mode=loopback --passphrase-file passphrase.txt \
        --export-secret-keys "$KEY_ID" > $HOME/.gnupg/secring.gpg

        echo "Done till here"
        echo "signingEnabled=true" > gradle.properties
        echo "mavenUsername=$(aws secretsmanager get-secret-value --region ${{ vars.AWS_REGION }} --secret-id ${{ secrets.MAVEN_TOKEN_ID }} --query SecretString --output text | jq -r .username)" >> gradle.properties
        echo "mavenPassword=$(aws secretsmanager get-secret-value --region ${{ vars.AWS_REGION }} --secret-id ${{ secrets.MAVEN_TOKEN_ID }} --query SecretString --output text | jq -r .password)" >> gradle.properties
        echo "# Signing key: https://keys.openpgp.org/vks/v1/by-fingerprint/FAC40B939F532005395118AF259316AA25557E2C" >> gradle.properties
        echo "signing.keyId=25557E2C" >> gradle.properties
        echo "signing.password=$(aws secretsmanager get-secret-value --region ${{ vars.AWS_REGION }} --secret-id ${{ secrets.GPG_KEY_ID }} --query SecretString --output text | jq -r .passphrase)" >> gradle.properties
        echo "signing.secretKeyRingFile=$HOME/.gnupg/secring.gpg" >> gradle.properties

    - name: Build with Gradle
      run: ./gradlew build
