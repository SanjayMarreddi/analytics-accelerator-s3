name: Gradle Package

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'corretto'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
        role-session-name: github-actions-session

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Create Gradle configuration
      run: |
        # Create directories
        WORKDIR=$(mktemp -d)
        chmod 700 "$WORKDIR"
        
        # Get key materials
        aws secretsmanager get-secret-value --region us-east-1 \
          --secret-id ${{ secrets.GPG_KEY_ID }} \
          --query SecretString --output text | jq -r .passphrase > "$WORKDIR/passphrase.txt"
        
        aws secretsmanager get-secret-value --region us-east-1 \
          --secret-id ${{ secrets.GPG_KEY_ID }} \
          --query SecretString --output text | jq -r .privateKey > "$WORKDIR/private.key"
        
        # Create a legacy secring.gpg directly
        gpg --batch --no-default-keyring --no-tty \
            --passphrase-file "$WORKDIR/passphrase.txt" \
            --secret-keyring "$WORKDIR/secring.gpg" \
            --import "$WORKDIR/private.key"
        
        # Create gradle.properties
        cat > gradle.properties << EOF
        signingEnabled=true
        mavenUsername=$(aws secretsmanager get-secret-value --region us-east-1 --secret-id ${{ secrets.MAVEN_TOKEN_ID }} --query SecretString --output text | jq -r .username)
        mavenPassword=$(aws secretsmanager get-secret-value --region us-east-1 --secret-id ${{ secrets.MAVEN_TOKEN_ID }} --query SecretString --output text | jq -r .password)
        # Signing key: https://keys.openpgp.org/vks/v1/by-fingerprint/FAC40B939F532005395118AF259316AA25557E2C
        signing.keyId=25557E2C
        signing.password=$(cat "$WORKDIR/passphrase.txt")
        signing.secretKeyRingFile=$WORKDIR/secring.gpg
        EOF
        
        # Set permissions
        chmod 600 "$WORKDIR/secring.gpg"
        chmod 600 gradle.properties
        
        # Clean up sensitive files but keep the keyring
        rm "$WORKDIR/passphrase.txt"
        rm "$WORKDIR/private.key"
      env:
        GPG_TTY: $(tty)
        GNUPGHOME: /dev/null  # Prevent GPG from using any existing configuration

    - name: Build with Gradle
      run: ./gradlew build
